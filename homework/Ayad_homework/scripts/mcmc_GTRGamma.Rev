################################################################################
#
# RevBayes Example: Bayesian inference of phylogeny using a Jukes-Cantor
#            substitution model on a single gene.
#
# authors: Sebastian Hoehna, Michael Landis, and Tracy A. Heath
#
################################################################################


### Read in sequence data for both genes
data = readDiscreteCharacterData("data/primates_and_galeopterus_cytb.nex")

# Get some useful variables from the data. We need these later on.
num_taxa <- data.ntaxa()
num_branches <- 2 * num_taxa - 3
taxa <- data.taxa()

moves    = VectorMoves()
monitors = VectorMonitors()

######################
# Substitution Model #
######################

er_prior <- v(1,1,1,1,1,1)
er ~ dnDirichlet(er_prior)

pi_prior <- v(1,1,1,1) 
pi ~ dnDirichlet(pi_prior)

moves.append( mvBetaSimplex(pi, weight=2) )
moves.append( mvDirichletSimplex(pi, weight=1) )

moves.append( mvBetaSimplex(er, weight=3) )
	moves.append( mvDirichletSimplex(er, weight=1) )

Q := fnGTR(er,pi)

alpha ~ dnUniform( 0.0, 1E8 )
alpha.setValue(1.0)

gamma_rates := fnDiscretizeGamma( alpha, alpha, 4 )

moves.append( mvScale(alpha, weight=2.0) )


##############
# Tree model #
##############

out_group = clade("Galeopterus_variegatus")
# Prior distribution on the tree topology    
topology ~ dnUniformTopology(taxa, outgroup=out_group)
moves.append( mvNNI(topology, weight=num_taxa/2.0) )
moves.append( mvSPR(topology, weight=num_taxa/10.0) )

# Branch length prior
for (i in 1:num_branches) {
    bl[i] ~ dnExponential(10.0)
    moves.append( mvScale(bl[i]) )
}

TL := sum(bl)
    
psi := treeAssembly(topology, bl)

###################
# PhyloCTMC Model #
###################

# the sequence evolution model
seq ~ dnPhyloCTMC(tree=psi, Q=Q, siteRates=gamma_rates, type="DNA")

# attach the data
seq.clamp(data)


############
# Analysis #
############

mymodel = model(psi)

# add monitors
monitors.append( mnScreen(TL, printgen=1000) )
monitors.append( mnFile(psi, filename="output/primates_cytb_GTRGamma.trees", printgen=10) )
monitors.append( mnModel(filename="output/primates_cytb_GTRGamma.log", printgen=10) )

# run the analysis
mymcmc = mcmc(mymodel, moves, monitors, nruns=2, combine="mixed")
mymcmc.run(generations=10000,tuningInterval=200)


###################
# Post processing #
###################

# Now, we will analyze the tree output.
# Let us start by reading in the tree trace
treetrace = readTreeTrace("output/primates_cytb_GTRGamma.trees", treetype="non-clock", outgroup=out_group)
# and then get the MAP tree
map_tree = mapTree(treetrace,"output/primates_cytb_GTRGamma_MAP.tree")
