data <- readDiscreteCharacterData("data/primates_and_galeopterus_cytb.nex")

#Calculate number of taxa and branch lenght. Branch length 2N*3
num_taxa <- data.ntaxa()
num_branches <- 2*num_taxa - 3
taxa <- data.taxa()

#SetupMoves
moves    = VectorMoves()
monitors = VectorMonitors()

#F81 priors drawn from Dirichlet distribution
pi_prior <- v(1,1,1,1) 
pi ~ dnDirichlet(pi_prior)

#Move
moves.append( mvBetaSimplex(pi, weight=2) )
moves.append( mvDirichletSimplex(pi, weight=1))

#F81 matrix
Q := fnF81(pi)

#Working with the topology. Set the outgroup
out_group = clade("Galeopterus_variegatus")
topology ~ dnUniformTopology(taxa, outgroup=out_group)
moves.append( mvNNI(topology, weight=num_taxa/2.0) )
moves.append( mvSPR(topology, weight=num_taxa/10.0) ) 

#For loop for Branch length
for (i in 1:num_branches) {
   br_lens[i] ~ dnExponential(10.0)
   moves.append( mvScale(br_lens[i]) )
}

#Tree length in this case is the sum of branch length
TL := sum(br_lens)

#Creating the tree
psi := treeAssembly(topology, br_lens)

#Building a random variable for the character data
seq ~ dnPhyloCTMC(tree=psi, Q=Q, type="DNA")

seq.clamp(data)

#Run MCMC
mymodel = model(Q)

monitors.append( mnModel(filename="outputIG/primates_cytb_F81.log", printgen=10) )

monitors.append( mnFile(filename="outputIG/primates_cytb_F81.trees", printgen=10, psi) )

monitors.append( mnScreen(printgen=500, TL) )

mymcmc = mcmc(mymodel, monitors, moves, nruns=2, combine="mixed")

mymcmc.run(generations=10000,tuningInterval=200)

treetrace = readTreeTrace("outputIG/primates_cytb_F81.trees", treetype="non-clock", outgroup=out_group)

map_tree = mapTree(treetrace,"outputIG/primates_cytb_F81_MAP.tree")