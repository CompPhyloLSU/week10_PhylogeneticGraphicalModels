data <- readDiscreteCharacterData("data/primates_and_galeopterus_cytb.nex")

#Calculate number of taxa and branch lenght. Branch length 2N*3
num_taxa <- data.ntaxa()
num_branches <- 2*num_taxa - 3
taxa <- data.taxa()

#SetupMoves
moves    = VectorMoves()
monitors = VectorMonitors()

#HKY priors drawn from Dirichlet distribution
er_prior <- v(1,1,1,1,1,1) 
er ~ dnDirichlet(er_prior)
pi_prior <- v(1,1,1,1) 
pi ~ dnDirichlet(pi_prior)

#move setup for MCMC
moves.append( mvBetaSimplex(er, weight=3) )
moves.append( mvDirichletSimplex(er, weight=1) )
moves.append( mvBetaSimplex(pi, weight=2) )
moves.append( mvDirichletSimplex(pi, weight=1) )

#GTR matrix
Q := fnGTR(er,pi)

#Working with the topology. Set the outgroup
out_group = clade("Galeopterus_variegatus")
topology ~ dnUniformTopology(taxa, outgroup=out_group)



#For loop for JC
for (i in 1:num_branches) {
   br_lens[i] ~ dnExponential(10.0)
   moves.append( mvScale(br_lens[i]) )
}

#Tree length in this case is the sum of branch length
TL := sum(br_lens)

#Creating the tree
psi := treeAssembly(topology, br_lens)

#Building a random variable for the character data
seq ~ dnPhyloCTMC(tree=psi, Q=Q, type="DNA")

seq.clamp(data)

#Run MCMC
mymodel = model(Q)

monitors.append( mnModel(filename="output/primates_cytb_GTR.log", printgen=10) )

monitors.append( mnFile(filename="output/primates_cytb_GTR.trees", printgen=10, psi) )

monitors.append( mnScreen(printgen=1000, TL) )

mymcmc = mcmc(mymodel, monitors, moves, nruns=2, combine="mixed")

mymcmc.run(generations=20000,tuningInterval=200)

treetrace = readTreeTrace("output/primates_cytb_GTR.trees", treetype="non-clock", outgroup=out_group)

map_tree = mapTree(treetrace,"output/primates_cytb_GTR_MAP.tree")